# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#

#Start the radio at 7 o'clock every morning
#Increase the volume to 100% after 15 minutes
#Stop the radio at 8 o'clock
# m h  dom mon dow   command
#  0 7   *  *    *    mpc volume 70
#  0 7   *  *    *    mpc play
# 15 7   *  *    *    mpc volume 100
#  0 8   *  *    *    mpc stop

# log the cpu temperature
# */1 *  *  *    *    { date | tr -d '\n' ; vcgencmd measure_temp; } >> /home/pi/cpu_temp.log
#@hourly
*/1 *  *  *    * { date | tr -d '\n' ; vcgencmd measure_temp; } >> /home/pi/cpu_temp.log

# log the voltage measured by attiny85
#@hourly
*/1 *  *  *    * /home/pi/Development/attiny85/get_data.py >> /home/pi/voltage.log 2>&1

#run the webserver
@reboot    /home/pi/Development/remi_web/test_remi.py 2>&1
#>> /home/pi/nediy.log
#2>&1

# Following commands shuts down the system if voltage is 0
# */1 *  *  *    *    /home/pi/Development/read_voltage --no-recursion  >> /home/pi/voltage.log

#check the stock exchange regularly during week days
#*/5 8-19 * * 1-5 cd /home/pi/Development/; ./gozlemle.py >> /home/pi/virtual_drv_10MB/gozlemle.log 2>&1
